{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nvar EXPO_URL = \"https://exp.host/--/api/v2/push/send\";\nvar TOKEN_SERVER = \"https://honeysuckle-lean-earwig.glitch.me/noti/\";\nexport var submitToken = function submitToken(token) {\n  var d, n, response, result;\n  return _regeneratorRuntime.async(function submitToken$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          d = new Date();\n          n = d.getTime();\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(axios.post(TOKEN_SERVER, {\n            token: token,\n            id: n\n          }));\n\n        case 4:\n          response = _context.sent;\n          result = response.data;\n          return _context.abrupt(\"return\", n);\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getToken = function getToken(id) {\n  var response, result;\n  return _regeneratorRuntime.async(function getToken$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(TOKEN_SERVER + (\"\" + id)));\n\n        case 2:\n          response = _context2.sent;\n          result = response.data;\n          return _context2.abrupt(\"return\", result);\n\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var sendPushNoti = function sendPushNoti(token, title, body) {\n  var message;\n  return _regeneratorRuntime.async(function sendPushNoti$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          message = {\n            to: token,\n            sound: \"default\",\n            title: title,\n            body: body,\n            data: {\n              someData: \"goes here\"\n            }\n          };\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"https://exp.host/--/api/v2/push/send\", {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Accept-encoding\": \"gzip, deflate\",\n              \"Content-Type\": \"application/json\"\n            },\n            mode: \"no-cors\",\n            body: JSON.stringify(message)\n          }));\n\n        case 3:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["C:/Users/HaToan/Documents/chatappGAU/services/api.tsx"],"names":["axios","EXPO_URL","TOKEN_SERVER","submitToken","token","d","Date","n","getTime","post","id","response","result","data","getToken","get","sendPushNoti","title","body","message","to","sound","someData","fetch","method","headers","Accept","mode","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,IAAMC,QAAQ,GAAG,sCAAjB;AACA,IAAMC,YAAY,GAAG,iDAArB;AAOA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBC,UAAAA,CADqB,GACjB,IAAIC,IAAJ,EADiB;AAErBC,UAAAA,CAFqB,GAEjBF,CAAC,CAACG,OAAF,EAFiB;AAAA;AAAA,2CAGFR,KAAK,CAACS,IAAN,CAAWP,YAAX,EAAyB;AAAEE,YAAAA,KAAK,EAALA,KAAF;AAASM,YAAAA,EAAE,EAAEH;AAAb,WAAzB,CAHE;;AAAA;AAGnBI,UAAAA,QAHmB;AAInBC,UAAAA,MAJmB,GAIVD,QAAQ,CAACE,IAJC;AAAA,2CAMlBN,CANkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;AASP,OAAO,IAAMO,QAAQ,GAAG,SAAXA,QAAW,CAAOJ,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACCV,KAAK,CAACe,GAAN,CAAUb,YAAY,SAAMQ,EAAN,CAAtB,CADD;;AAAA;AAChBC,UAAAA,QADgB;AAEhBC,UAAAA,MAFgB,GAEPD,QAAQ,CAACE,IAFF;AAAA,4CAGfD,MAHe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB;AAMP,OAAO,IAAMI,YAAY,GAAG,SAAfA,YAAe,CAAOZ,KAAP,EAAca,KAAd,EAAqBC,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAWpBC,UAAAA,OAXoB,GAWV;AACdC,YAAAA,EAAE,EAAEhB,KADU;AAEdiB,YAAAA,KAAK,EAAE,SAFO;AAGdJ,YAAAA,KAAK,EAAEA,KAHO;AAIdC,YAAAA,IAAI,EAAEA,IAJQ;AAKdL,YAAAA,IAAI,EAAE;AAAES,cAAAA,QAAQ,EAAE;AAAZ;AALQ,WAXU;AAAA;AAAA,2CAmBpBC,KAAK,CAAC,sCAAD,EAAyC;AAClDC,YAAAA,MAAM,EAAE,MAD0C;AAElDC,YAAAA,OAAO,EAAE;AACPC,cAAAA,MAAM,EAAE,kBADD;AAEP,iCAAmB,eAFZ;AAGP,8BAAgB;AAHT,aAFyC;AAOlDC,YAAAA,IAAI,EAAE,SAP4C;AAQlDT,YAAAA,IAAI,EAAEU,IAAI,CAACC,SAAL,CAAeV,OAAf;AAR4C,WAAzC,CAnBe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB","sourcesContent":["import axios from \"axios\";\r\nconst EXPO_URL = \"https://exp.host/--/api/v2/push/send\";\r\nconst TOKEN_SERVER = \"https://honeysuckle-lean-earwig.glitch.me/noti/\";\r\n\r\nexport interface Token {\r\n  id: number;\r\n  token: string;\r\n}\r\n\r\nexport const submitToken = async (token) => {\r\n  var d = new Date();\r\n  var n = d.getTime();\r\n  const response = await axios.post(TOKEN_SERVER, { token, id: n });\r\n  const result = response.data as Token;\r\n  //   console.log(result)\r\n  return n;\r\n};\r\n\r\nexport const getToken = async (id) => {\r\n  const response = await axios.get(TOKEN_SERVER + `${id}`);\r\n  const result = response.data as Token;\r\n  return result;\r\n};\r\n\r\nexport const sendPushNoti = async (token, title, body) => {\r\n  // const mess = {\r\n  //   to: token,\r\n  //   sound: \"default\",\r\n  //   title,\r\n  //   body,\r\n  //   mode: \"no-cors\",\r\n  // };\r\n\r\n  // await axios.post(EXPO_URL, mess);\r\n\r\n  const message = {\r\n    to: token,\r\n    sound: \"default\",\r\n    title: title,\r\n    body: body,\r\n    data: { someData: \"goes here\" },\r\n  };\r\n\r\n  await fetch(\"https://exp.host/--/api/v2/push/send\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Accept-encoding\": \"gzip, deflate\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    mode: \"no-cors\",\r\n    body: JSON.stringify(message),\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}